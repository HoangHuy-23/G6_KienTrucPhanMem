version: "3.8"

services:
  zookeeper:
    image: confluentinc/cp-zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 2181:2181
    restart: on-failure
    networks:
      - app-network

  kafka-1:
    image: confluentinc/cp-kafka
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
    restart: on-failure
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-1:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    networks:
      - app-network

  mongodb:
    image: mongo:5
    container_name: mongo
    restart: always
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
    networks:
      - app-network

  notificationservice:
    build:
      context: ./notificationservice
      dockerfile: Dockerfile
    image: notification-service:latest
    container_name: notification-service
    depends_on:
      - kafka-1
      - mongodb
    environment:
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka-1:9092
      - SPRING_DATA_MONGODB_URI=mongodb://root:root@mongodb:27017/notification-service?authSource=admin
    ports:
      - 8082:8082
    restart: on-failure
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  mysql_data: # Giữ lại nếu các service khác cần, nhưng không liên quan đến notification-service