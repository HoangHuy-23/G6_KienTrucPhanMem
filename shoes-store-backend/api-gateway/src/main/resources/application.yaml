server:
  port: 8888

app:
  api-prefix: /api/v1
  cors:
    allowed-origins: "http://localhost:5173,http://localhost:5174,https://admin.myapp.com"

eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka/
  instance:
    prefer-ip-address: true
    lease-renewal-interval-in-seconds: 10
    lease-expiration-duration-in-seconds: 30

resilience4j:
  circuitbreaker:
    instances:
      identityServiceCircuitBreaker:
        failureRateThreshold: 50
        minimumNumberOfCalls: 5
        slidingWindowSize: 10
        waitDurationInOpenState: 10s
      userServiceCircuitBreaker:
        failureRateThreshold: 50
        minimumNumberOfCalls: 5
        slidingWindowSize: 10
        waitDurationInOpenState: 10s
      productServiceCircuitBreaker:
        failureRateThreshold: 90
        minimumNumberOfCalls: 20
        slidingWindowSize: 100
        waitDurationInOpenState: 30s
        slow-call-duration-threshold: 120s
        slow-call-rate-threshold: 95
      orderServiceCircuitBreaker:
        failureRateThreshold: 50
        minimumNumberOfCalls: 5
        slidingWindowSize: 10
        waitDurationInOpenState: 10s
      paymentServiceCircuitBreaker:
        failureRateThreshold: 50
        minimumNumberOfCalls: 5
        slidingWindowSize: 10
        waitDurationInOpenState: 10s
      cartServiceCircuitBreaker:
        failureRateThreshold: 50
        minimumNumberOfCalls: 5
        slidingWindowSize: 10
        waitDurationInOpenState: 10s
      notificationServiceCircuitBreaker:
        failureRateThreshold: 50
        minimumNumberOfCalls: 5
        slidingWindowSize: 10
        waitDurationInOpenState: 10s
      reviewServiceCircuitBreaker:
        failureRateThreshold: 50
        minimumNumberOfCalls: 5
        slidingWindowSize: 10
        waitDurationInOpenState: 10s
  timelimiter:
    instances:
      productServiceCircuitBreaker:
        timeoutDuration: 20s

#logging:
#  level:
#    ROOT: INFO
#    org.springframework.cloud.gateway: DEBUG
#    io.github.resilience4j.circuitbreaker: DEBUG


spring:
  application:
    name: api-gateway
  data:
    redis:
      host: 127.0.0.1
      port: 6379
      password: ""
      timeout: 6000ms
      client-type: lettuce
  cloud:
    gateway:
      routes:
        - id: identity-service
          uri: lb://identity-service
          predicates:
            - Path=${app.api-prefix}/identity/**
          filters:
            - StripPrefix=2
            - name: CircuitBreaker
              args:
                name: identityServiceCircuitBreaker
                fallbackUri: forward:/fallback/identity
        - id: user-service
          uri: lb://user-service
          predicates:
            - Path=${app.api-prefix}/user/**
          filters:
            - StripPrefix=2
            - name: RequestRateLimiter
              args:
                key-resolver: "#{@ipKeyResolver}"
                redis-rate-limiter.replenishRate: 5
                redis-rate-limiter.burstCapacity: 10
            - name: CircuitBreaker
              args:
                name: userServiceCircuitBreaker
                fallbackUri: forward:/fallback/user

        - id: product-service
          uri: lb://product-service
          predicates:
            - Path=${app.api-prefix}/product/**
          filters:
            - StripPrefix=2
            - name: RequestRateLimiter
              args:
                key-resolver: "#{@ipKeyResolver}"
                redis-rate-limiter.replenishRate: 10
                redis-rate-limiter.burstCapacity: 20
            - name: CircuitBreaker
              args:
                name: productServiceCircuitBreaker
                fallbackUri: forward:/fallback/product
        - id: order-service
          uri: lb://order-service
          predicates:
            - Path=${app.api-prefix}/orders/**
          filters:
            - StripPrefix=2
            - name: RequestRateLimiter
              args:
                key-resolver: "#{@ipKeyResolver}"
                redis-rate-limiter.replenishRate: 5
                redis-rate-limiter.burstCapacity: 10
            - name: CircuitBreaker
              args:
                name: orderServiceCircuitBreaker
                fallbackUri: forward:/fallback/order
        - id: payment-service
          uri: lb://payment-service
          predicates:
            - Path=${app.api-prefix}/payments/**
          filters:
            - StripPrefix=2
            - name: RequestRateLimiter
              args:
                key-resolver: "#{@ipKeyResolver}"
                redis-rate-limiter.replenishRate: 5
                redis-rate-limiter.burstCapacity: 10
            - name: CircuitBreaker
              args:
                name: paymentServiceCircuitBreaker
                fallbackUri: forward:/fallback/payment
        - id: cart-service
          uri: lb://cart-service
          predicates:
            - Path=${app.api-prefix}/cart/**
          filters:
            - StripPrefix=2
            - name: RequestRateLimiter
              args:
                key-resolver: "#{@ipKeyResolver}"
                redis-rate-limiter.replenishRate: 5
                redis-rate-limiter.burstCapacity: 10
            - name: CircuitBreaker
              args:
                name: cartServiceCircuitBreaker
                fallbackUri: forward:/fallback/cart
        - id: notification-service
          uri: lb://notification-service
          predicates:
            - Path=${app.api-prefix}/notification/**
          filters:
            - StripPrefix=2
            - name: RequestRateLimiter
              args:
                key-resolver: "#{@ipKeyResolver}"
                redis-rate-limiter.replenishRate: 5
                redis-rate-limiter.burstCapacity: 10
            - name: CircuitBreaker
              args:
                name: notificationServiceCircuitBreaker
                fallbackUri: forward:/fallback/notification
        - id: review-service
          uri: lb://review-service
          predicates:
            - Path=${app.api-prefix}/review/**
          filters:
            - StripPrefix=2
            - name: RequestRateLimiter
              args:
                key-resolver: "#{@ipKeyResolver}"
                redis-rate-limiter.replenishRate: 5
                redis-rate-limiter.burstCapacity: 10
            - name: CircuitBreaker
              args:
                name: reviewServiceCircuitBreaker
                fallbackUri: forward:/fallback/review

      httpclient:
        connect-timeout: 15000
        response-timeout: 120000ms